version: '2.1'
orbs:
  aws-cli: circleci/aws-cli@4.0
  aws-ecr: circleci/aws-ecr@9.0
  aws-ecs: circleci/aws-ecs@4.0
  snyk: snyk/snyk@2.0.2
  sonarcloud: sonarsource/sonarcloud@2.0.0
  owasp: entur/owasp@0.0.19


  jobs:
#    owasp:
#      - owasp/commandline_owasp_dependency_check:
#          executor: java_11
#          arguments: >-
#            --scan ./ --failOnCVSS 7 --suppression
#            ./dependency-check-suppressions.xml
#          context: global
#
#    snyk:
#      docker:
#        - image: circleci/python:latest
#      steps:
#        - checkout
#        - run: pip install requirements.txt
#        - snyk/scan
#
##    sonar:
##      - sonarcloud/scan:
##          sonar_token_variable_name: ${SONAR_TOKEN}
##

workflows:
  build-and-deploy:
    jobs:
      - snyk
      - owasp
      - aws-ecr/build_and_push_image:
          filters:
            branches:
              only:
                - main
          context: aws-dev
          auth:
            - aws-cli/setup:
                profile_name: OIDC-USER
                role_arn: ${AWS_ROLE}
                role_session_name: session-role
          profile_name: OIDC-USER
          account_id: ${ACCOUNT_ID}
          region: ${AWS_REGION}
          create_repo: true
          repo: ${MY_APP_PREFIX}
          tag: latest

      - aws-ecs/deploy_service_update:
          context: aws-dev
          filters:
            branches:
              only:
                - main
          auth:
            - aws-cli/setup:
                profile_name: OIDC-USER
                role_arn: ${AWS_ROLE}
                role_session_name: session-role
          region: ${AWS_REGION}
          cluster: ${MY_APP_PREFIX}-cluster
          family: ${MY_APP_PREFIX}-service
          profile_name: OIDC-USER
          requires:
            - aws-ecr/build_and_push_image
#





#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - mainf
